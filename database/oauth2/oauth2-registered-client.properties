neiko.security.oauth2.registered.client[0].id = 111111111111111111
neiko.security.oauth2.registered.client[0].clientId = client1
neiko.security.oauth2.registered.client[0].clientSecret = {noop}secret1
neiko.security.oauth2.registered.client[0].clientName = CLIENT_1
neiko.security.oauth2.registered.client[0].scopes = openid,email,phone,address,message.read,message.write
neiko.security.oauth2.registered.client[0].clientAuthenticationMethods = client_secret_post,client_secret_basic
neiko.security.oauth2.registered.client[0].authorizationGrantTypes = authorization_code,implicit,refresh_token,client_credentials,password
neiko.security.oauth2.registered.client[0].redirectUris = \
  http://127.0.0.1:8000/login/oauth2/code/sas-oidc-login,\
  http://127.0.0.1:8000/login/oauth2/code/sas-authorization-code-login,\
  http://127.0.0.1:8000/authorized
neiko.security.oauth2.registered.client[0].clientSettings = {\
  "@class":"java.util.Collections$UnmodifiableMap",\
  "settings.client.require-proof-key":false,\
  "settings.client.require-authorization-consent":true\
  }
neiko.security.oauth2.registered.client[0].tokenSettings = {\
  "@class":"java.util.Collections$UnmodifiableMap",\
  "settings.token.reuse-refresh-tokens":true,\
  "settings.token.id-token-signature-algorithm":["org.springframework.security.oauth2.jose.jws.SignatureAlgorithm","RS256"],\
  "settings.token.access-token-time-to-live":["java.time.Duration",300.000000000],\
  "settings.token.access-token-format":{\
        "@class":"org.springframework.security.oauth2.server.authorization.settings.OAuth2TokenFormat",\
        "value":"self-contained"\
    },\
  "settings.token.refresh-token-time-to-live":["java.time.Duration",3600.000000000],\
  "settings.token.authorization-code-time-to-live":["java.time.Duration",300.000000000]\
  }


neiko.security.oauth2.registered.client[1].id = 222222222222222222
neiko.security.oauth2.registered.client[1].clientId = client2
neiko.security.oauth2.registered.client[1].clientSecret = {noop}secret2
neiko.security.oauth2.registered.client[1].clientName = CLIENT_2
neiko.security.oauth2.registered.client[1].scopes = openid,email,phone,address,message.read,message.write
neiko.security.oauth2.registered.client[1].clientAuthenticationMethods = client_secret_post,client_secret_basic
neiko.security.oauth2.registered.client[1].authorizationGrantTypes = authorization_code,implicit,refresh_token,client_credentials,password
neiko.security.oauth2.registered.client[1].redirectUris = \
  http://127.0.0.1:8000/login/oauth2/code/sas-oidc-login,\
  http://127.0.0.1:8000/login/oauth2/code/sas-authorization-code-login,\
  http://127.0.0.1:8000/authorized


neiko.security.oauth2.registered.client[2].id = 3333333333333333
neiko.security.oauth2.registered.client[2].clientId = test
neiko.security.oauth2.registered.client[2].clientSecret = {noop}test
neiko.security.oauth2.registered.client[2].clientName = TEST
neiko.security.oauth2.registered.client[2].scopes = \
  openid,email,phone,address,message.read,message.write,skip_password_decode,skip_captcha,authority_info
neiko.security.oauth2.registered.client[2].clientAuthenticationMethods = \
  client_secret_post,client_secret_basic
neiko.security.oauth2.registered.client[2].authorizationGrantTypes = \
  federated_identity,authorization_code,implicit,refresh_token,client_credentials,password
neiko.security.oauth2.registered.client[2].redirectUris = \
  http://127.0.0.1:9000/oauth2Login,\
  http://127.0.0.1:9000/webjars/oauth/oauth2.html,\
  http://127.0.0.1:9000/swagger-ui/oauth2-redirect.html,\
  http://127.0.0.1:8000/login/oauth2/code/sas-oidc-login,\
  http://127.0.0.1:8000/login/oauth2/code/sas-authorization-code-login,\
  http://127.0.0.1:8000/authorized
neiko.security.oauth2.registered.client[2].clientSettings = {\
  "@class":"java.util.Collections$UnmodifiableMap",\
  "settings.client.require-authorization-consent":true\
  }
neiko.security.oauth2.registered.client[2].tokenSettings = {\
  "@class":"java.util.Collections$UnmodifiableMap",\
  "settings.token.access-token-time-to-live":["java.time.Duration",1800.000000000]\
  }


neiko.security.oauth2.registered.client[3].id = 44444444444444444444
neiko.security.oauth2.registered.client[3].clientId = demo
neiko.security.oauth2.registered.client[3].clientSecret = {noop}demo
neiko.security.oauth2.registered.client[3].clientName = DEMO
neiko.security.oauth2.registered.client[3].scopes = \
  openid,email,phone,address,message.read,message.write,skip_password_decode,skip_captcha,authority_info
neiko.security.oauth2.registered.client[3].clientAuthenticationMethods = \
  client_secret_post,client_secret_basic
neiko.security.oauth2.registered.client[3].authorizationGrantTypes = \
  federated_identity,authorization_code,implicit,refresh_token,client_credentials,password
neiko.security.oauth2.registered.client[3].redirectUris = \
  http://127.0.0.1:9000/oauth2Login,\
  http://127.0.0.1:9000/webjars/oauth/oauth2.html,\
  http://127.0.0.1:9000/swagger-ui/oauth2-redirect.html,\
  http://127.0.0.1:8000/login/oauth2/code/sas-oidc-login,\
  http://127.0.0.1:8000/login/oauth2/code/sas-authorization-code-login,\
  http://127.0.0.1:8000/authorized
neiko.security.oauth2.registered.client[3].clientSettings = {\
  "@class":"java.util.Collections$UnmodifiableMap",\
  "settings.client.require-authorization-consent":true\
  }
neiko.security.oauth2.registered.client[3].tokenSettings = {\
  "@class":"java.util.Collections$UnmodifiableMap",\
  "settings.token.access-token-time-to-live":["java.time.Duration",1800.000000000],\
  "settings.token.access-token-format":{\
        "@class":"org.springframework.security.oauth2.server.authorization.settings.OAuth2TokenFormat",\
        "value":"reference"\
    }\
  }


neiko.security.oauth2.registered.client[4].id = 55555555555555555
neiko.security.oauth2.registered.client[4].clientId = messaging-client
neiko.security.oauth2.registered.client[4].clientSecret = {noop}messaging-secret
neiko.security.oauth2.registered.client[4].clientName = MESSAGE_CLIENT
neiko.security.oauth2.registered.client[4].scopes = openid,profile,email,phone,address,message.read,message.write
neiko.security.oauth2.registered.client[4].clientAuthenticationMethods = client_secret_post,client_secret_basic
neiko.security.oauth2.registered.client[4].authorizationGrantTypes = authorization_code,implicit,refresh_token,client_credentials,password
neiko.security.oauth2.registered.client[4].redirectUris = \
  http://127.0.0.1:8000/login/oauth2/code/sas-oidc-login,\
  http://127.0.0.1:8000/login/oauth2/code/sas-authorization-code-login,\
  http://127.0.0.1:8000/authorized
neiko.security.oauth2.registered.client[4].clientSettings = {\
  "@class":"java.util.Collections$UnmodifiableMap",\
  "settings.client.require-proof-key":false,\
  "settings.client.require-authorization-consent":true\
  }

neiko.security.oauth2.registered.client[5].id = 66666666666666666
neiko.security.oauth2.registered.client[5].clientId = messaging-client1
neiko.security.oauth2.registered.client[5].clientSecret = {noop}messaging-secret1
neiko.security.oauth2.registered.client[5].clientName = MESSAGE_CLIENT1
neiko.security.oauth2.registered.client[5].scopes = openid,profile,email,phone,address,message.read,message.write
neiko.security.oauth2.registered.client[5].clientAuthenticationMethods = client_secret_post,client_secret_basic
neiko.security.oauth2.registered.client[5].authorizationGrantTypes = authorization_code,implicit,refresh_token,client_credentials,password
neiko.security.oauth2.registered.client[5].redirectUris = \
  http://127.0.0.1:8000/login/oauth2/code/sas-oidc-login,\
  http://127.0.0.1:8000/login/oauth2/code/sas-authorization-code-login,\
  http://127.0.0.1:8000/authorized


neiko.security.oauth2.registered.client[6].id = 77777777777777777
neiko.security.oauth2.registered.client[6].clientId = messaging-client2
neiko.security.oauth2.registered.client[6].clientSecret = {noop}messaging-secret2
neiko.security.oauth2.registered.client[6].clientName = MESSAGE_CLIENT2
neiko.security.oauth2.registered.client[6].scopes = openid,profile,email,phone,address,message.read,message.write
neiko.security.oauth2.registered.client[6].clientAuthenticationMethods = client_secret_post,client_secret_basic
neiko.security.oauth2.registered.client[6].authorizationGrantTypes = authorization_code,implicit,refresh_token,client_credentials,password
neiko.security.oauth2.registered.client[6].redirectUris = \
  http://127.0.0.1:8000/login/oauth2/code/sas-oidc-login,\
  http://127.0.0.1:8000/login/oauth2/code/sas-authorization-code-login,\
  http://127.0.0.1:8000/authorized
neiko.security.oauth2.registered.client[6].tokenSettings = {\
  "@class":"java.util.Collections$UnmodifiableMap",\
  "settings.token.access-token-format":{\
        "@class":"org.springframework.security.oauth2.server.authorization.settings.OAuth2TokenFormat",\
        "value":"reference"\
    }\
  }
